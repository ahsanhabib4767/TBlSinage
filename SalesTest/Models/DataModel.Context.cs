//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesTest.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LIVEEntities : DbContext
    {
        public LIVEEntities()
            : base("name=LIVEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sBenificiary> sBenificiaries { get; set; }
        public virtual DbSet<sMenu> sMenus { get; set; }
        public virtual DbSet<sPageName> sPageNames { get; set; }
        public virtual DbSet<sParam> sParams { get; set; }
        public virtual DbSet<sPlant> sPlants { get; set; }
        public virtual DbSet<sRole> sRoles { get; set; }
        public virtual DbSet<sUserPage> sUserPages { get; set; }
        public virtual DbSet<DataFromDurbin> DataFromDurbins { get; set; }
        public virtual DbSet<OtherBrand> OtherBrands { get; set; }
        public virtual DbSet<SinageType> SinageTypes { get; set; }
        public virtual DbSet<ASMAcceptance> ASMAcceptances { get; set; }
        public virtual DbSet<tblVendor> tblVendors { get; set; }
        public virtual DbSet<CustomerExecutive> CustomerExecutives { get; set; }
        public virtual DbSet<RegionalSalesManager> RegionalSalesManagers { get; set; }
        public virtual DbSet<TerritoryDevelopmentManager> TerritoryDevelopmentManagers { get; set; }
        public virtual DbSet<sUser> sUsers { get; set; }
        public virtual DbSet<VisicoolerSize> VisicoolerSizes { get; set; }
        public virtual DbSet<VendorConfirm> VendorConfirms { get; set; }
        public virtual DbSet<RequestMaster> RequestMasters { get; set; }
        public virtual DbSet<RequestVisicooler> RequestVisicoolers { get; set; }
    
        public virtual ObjectResult<getDataFromDurbin_Result> getDataFromDurbin(Nullable<int> outletcode)
        {
            var outletcodeParameter = outletcode.HasValue ?
                new ObjectParameter("outletcode", outletcode) :
                new ObjectParameter("outletcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataFromDurbin_Result>("getDataFromDurbin", outletcodeParameter);
        }
    
        public virtual ObjectResult<spUserLoginToApplication_Result> spUserLoginToApplication(Nullable<int> userID, string userPass, string userPin)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userPassParameter = userPass != null ?
                new ObjectParameter("UserPass", userPass) :
                new ObjectParameter("UserPass", typeof(string));
    
            var userPinParameter = userPin != null ?
                new ObjectParameter("UserPin", userPin) :
                new ObjectParameter("UserPin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserLoginToApplication_Result>("spUserLoginToApplication", userIDParameter, userPassParameter, userPinParameter);
        }
    
        public virtual ObjectResult<spUserLogin_Result> spUserLogin(Nullable<int> userID, string userPass, string userPin)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userPassParameter = userPass != null ?
                new ObjectParameter("UserPass", userPass) :
                new ObjectParameter("UserPass", typeof(string));
    
            var userPinParameter = userPin != null ?
                new ObjectParameter("UserPin", userPin) :
                new ObjectParameter("UserPin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserLogin_Result>("spUserLogin", userIDParameter, userPassParameter, userPinParameter);
        }
    
        public virtual ObjectResult<statusofRequest_Result> statusofRequest(Nullable<int> reqId)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<statusofRequest_Result>("statusofRequest", reqIdParameter);
        }
    
        public virtual ObjectResult<getDataForASM_Result> getDataForASM(Nullable<int> reqId)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataForASM_Result>("getDataForASM", reqIdParameter);
        }
    
        public virtual ObjectResult<workOrderFinal_Result> workOrderFinal(Nullable<int> reqId)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<workOrderFinal_Result>("workOrderFinal", reqIdParameter);
        }
    
        public virtual ObjectResult<getDataForASMDD_Result> getDataForASMDD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataForASMDD_Result>("getDataForASMDD");
        }
    
        public virtual int fun_ReqMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fun_ReqMaster");
        }
    
        public virtual ObjectResult<getForASM_Result> getForASM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getForASM_Result>("getForASM");
        }
    
        public virtual ObjectResult<getForSaleOff_Result> getForSaleOff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getForSaleOff_Result>("getForSaleOff");
        }
    
        public virtual ObjectResult<getForSaleOffbyId_Result> getForSaleOffbyId(Nullable<int> reqid)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getForSaleOffbyId_Result>("getForSaleOffbyId", reqidParameter);
        }
    
        public virtual int fun_SOff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fun_SOff");
        }
    
        public virtual int fun_venlist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fun_venlist");
        }
    
        public virtual ObjectResult<GetVendorcnfALL_Result> GetVendorcnfALL(Nullable<int> reqid)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorcnfALL_Result>("GetVendorcnfALL", reqidParameter);
        }
    
        public virtual ObjectResult<string> SEFeedbackDo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SEFeedbackDo", idParameter);
        }
    
        public virtual ObjectResult<MKTData_Result> MKTData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MKTData_Result>("MKTData");
        }
    
        public virtual ObjectResult<workOrder_Result> workOrder(Nullable<int> reqId)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<workOrder_Result>("workOrder", reqIdParameter);
        }
    
        public virtual ObjectResult<GetVendorAcknowledgement_Result> GetVendorAcknowledgement(Nullable<int> venid)
        {
            var venidParameter = venid.HasValue ?
                new ObjectParameter("venid", venid) :
                new ObjectParameter("venid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorAcknowledgement_Result>("GetVendorAcknowledgement", venidParameter);
        }
    
        public virtual ObjectResult<getDataAMVisi_Result> getDataAMVisi(Nullable<int> asmid)
        {
            var asmidParameter = asmid.HasValue ?
                new ObjectParameter("asmid", asmid) :
                new ObjectParameter("asmid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataAMVisi_Result>("getDataAMVisi", asmidParameter);
        }
    
        public virtual ObjectResult<getDataMEMVisi_Result> getDataMEMVisi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataMEMVisi_Result>("getDataMEMVisi");
        }
    
        public virtual ObjectResult<getDataRSMVisi_Result> getDataRSMVisi(Nullable<int> rsmid)
        {
            var rsmidParameter = rsmid.HasValue ?
                new ObjectParameter("rsmid", rsmid) :
                new ObjectParameter("rsmid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataRSMVisi_Result>("getDataRSMVisi", rsmidParameter);
        }
    
        public virtual ObjectResult<getDataSEVisi_Result> getDataSEVisi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataSEVisi_Result>("getDataSEVisi");
        }
    
        public virtual ObjectResult<workOrderforVendor_Result> workOrderforVendor(Nullable<int> reqId)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<workOrderforVendor_Result>("workOrderforVendor", reqIdParameter);
        }
    
        public virtual ObjectResult<ReportForDatewiseInstall_Result> ReportForDatewiseInstall(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportForDatewiseInstall_Result>("ReportForDatewiseInstall", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<ReportForVendorwiseInstall_Result> ReportForVendorwiseInstall(Nullable<int> vid)
        {
            var vidParameter = vid.HasValue ?
                new ObjectParameter("vid", vid) :
                new ObjectParameter("vid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportForVendorwiseInstall_Result>("ReportForVendorwiseInstall", vidParameter);
        }
    
        public virtual ObjectResult<ReportForAllVendorwiseInstall_Result> ReportForAllVendorwiseInstall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportForAllVendorwiseInstall_Result>("ReportForAllVendorwiseInstall");
        }
    
        public virtual ObjectResult<ReportForMyVendor_Result> ReportForMyVendor(Nullable<int> vid)
        {
            var vidParameter = vid.HasValue ?
                new ObjectParameter("vid", vid) :
                new ObjectParameter("vid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportForMyVendor_Result>("ReportForMyVendor", vidParameter);
        }
    
        public virtual ObjectResult<getDataRSMMarketing_Result> getDataRSMMarketing(Nullable<int> rsmid, Nullable<System.DateTime> begindate, Nullable<System.DateTime> enddate)
        {
            var rsmidParameter = rsmid.HasValue ?
                new ObjectParameter("rsmid", rsmid) :
                new ObjectParameter("rsmid", typeof(int));
    
            var begindateParameter = begindate.HasValue ?
                new ObjectParameter("begindate", begindate) :
                new ObjectParameter("begindate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataRSMMarketing_Result>("getDataRSMMarketing", rsmidParameter, begindateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<getVisiCoolerData_Result> getVisiCoolerData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVisiCoolerData_Result>("getVisiCoolerData");
        }
    
        public virtual ObjectResult<GetVendorcnfDate_Result> GetVendorcnfDate(Nullable<int> reqId)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorcnfDate_Result>("GetVendorcnfDate", reqIdParameter);
        }
    
        public virtual ObjectResult<MKTDataUpdate_Result> MKTDataUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MKTDataUpdate_Result>("MKTDataUpdate");
        }
    
        public virtual ObjectResult<GetVendorcnf_Result> GetVendorcnf()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorcnf_Result>("GetVendorcnf");
        }
    
        public virtual ObjectResult<GetSEcnf_Result> GetSEcnf()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSEcnf_Result>("GetSEcnf");
        }
    
        public virtual ObjectResult<getDataAM_Result> getDataAM(Nullable<int> asmid)
        {
            var asmidParameter = asmid.HasValue ?
                new ObjectParameter("asmid", asmid) :
                new ObjectParameter("asmid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataAM_Result>("getDataAM", asmidParameter);
        }
    
        public virtual ObjectResult<getDataForASMsales_Result> getDataForASMsales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDataForASMsales_Result>("getDataForASMsales");
        }
    
        public virtual ObjectResult<GetRequestDataForMKT_Result> GetRequestDataForMKT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRequestDataForMKT_Result>("GetRequestDataForMKT");
        }
    
        public virtual ObjectResult<getOutletDataFromDurbin_Result> getOutletDataFromDurbin(Nullable<int> outletcode)
        {
            var outletcodeParameter = outletcode.HasValue ?
                new ObjectParameter("outletcode", outletcode) :
                new ObjectParameter("outletcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOutletDataFromDurbin_Result>("getOutletDataFromDurbin", outletcodeParameter);
        }
    }
}
